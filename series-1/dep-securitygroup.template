AWSTemplateFormatVersion: 2010-09-09
Description: Dep Security Groups template
Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
  AccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Description: 'The CIDR IP range that is permitted to access. Note: a value of
      0.0.0.0/0 will allow access from ANY ip address'
    Type: String
  VPCID:
    Description: VPC ID of your existing Virtual Private Cloud (VPC) where you want
      to depoy RDS.
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Description: The CIDR block for VPC
    Type: String

Resources:
  MySQLRDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-mysql-sg
      GroupDescription: Allow access to MySQL Port
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref VPCCIDR
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  EKSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-eks-sg
      GroupDescription: EKS security group
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref AccessCIDR
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: !Sub kubernetes.io/cluster/${EnvironmentName}-eks-cluster
          Value: shared

Outputs:
  MySQLRDSSecurityGroup:
    Description: MySQL Security Group
    Value: !Ref MySQLRDSSecurityGroup
  EKSSecurityGroup:
    Description: EKS Security Group
    Value: !Ref EKSSecurityGroup